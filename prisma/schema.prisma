// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  password String
  imageUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts   Post[]
  blogs   Blog[]
  todos Todo[]
}


model Todo {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  task  String
  isComplete Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author   User      @relation(fields: [authorEmail], references: [email])
  authorEmail String    
  // comments Comment[]
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  content  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author   User      @relation(fields: [authorEmail], references: [email])
  authorEmail String    
  // comments Comment[]
}


model Blog{
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  content  String
  imageUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author   User      @relation(fields: [authorEmail], references: [email])
  authorEmail String    
  // comments Comment[]
}


// model Comment {
//   id      String @id @default(auto()) @map("_id") @db.ObjectId
//   comment String
//   post    Post   @relation(fields: [postId], references: [id])
//   postId  String @db.ObjectId
//   blog    Blog   @relation(fields: [blogId], references: [id])
//   blogId  String @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }